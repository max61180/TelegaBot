import os
import sqlite3
import asyncio
from fastapi import FastAPI
import uvicorn
from telegram import Update
from telegram.ext import Application, MessageHandler, ContextTypes, filters

# =============================================
# –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø (–¢–û–õ–¨–ö–û –ò–ó –ü–ï–†–ï–ú–ï–ù–ù–´–• –û–ö–†–£–ñ–ï–ù–ò–Ø)
# =============================================
BOT_TOKEN = os.environ["BOT_TOKEN"]  # –û–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è
ADMIN_ID = int(os.environ["ADMIN_ID"])  # –û–±—è–∑–∞—Ç–µ–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è
PORT = 8000
# =============================================

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
assert BOT_TOKEN != "", "BOT_TOKEN –Ω–µ –∑–∞–¥–∞–Ω!"
assert ADMIN_ID != 0, "ADMIN_ID –Ω–µ –∑–∞–¥–∞–Ω!"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è FastAPI
app = FastAPI()

@app.get("/")
def health_check():
    return {"status": "Secure bot active", "admin": ADMIN_ID}

# ... (–æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π) ...

async def run_bot():
    """–ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞"""
    app = Application.builder().token(BOT_TOKEN).build()
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    
    await app.initialize()
    await app.start()
    print(f"üîê –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω. –î–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ –¥–ª—è admin_id: {ADMIN_ID}")
    
    while True:
        await asyncio.sleep(3600)

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyError as e:
        print(f"üö® –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: –ù–µ –∑–∞–¥–∞–Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è {e}")
        exit(1)
